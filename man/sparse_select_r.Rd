% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Sparse_ISLET_main_fun.R
\name{sparse_select_r}
\alias{sparse_select_r}
\title{Estimate rank in the sparse ISLET case with unknown rank}
\usage{
sparse_select_r(X, y, r1, r2, r3, p1, p2, p3, thres, sparse_mode)
}
\arguments{
\item{y}{input response y}

\item{thres}{a thresholding in the autoselection of rank r. Suggestion value 1-2.}

\item{r}{input conservative esimate rank}

\item{p}{input dimension}
}
\value{
Estimated rank
}
\description{
This function is used to select rank r for the sparse tensor regression case when the rank is unknonw
}
\examples{
set.seed(2018)
n = c(3000); p = c(20); r = c(3); sig = c(5); s = c(12);
thres = c(2) # thresholding is greater than 1, and not too big. Suggestion is 1-2.
p1 = p2 = p3 = p
r1 = r2 = r3 = r
s1 = s2 = s3 = s
# Generate data
S.array = array(rnorm(r1*r2*r3), dim=c(r1,r2,r3)) # Core tensor
S = as.tensor(S.array)
E1 = matrix(rnorm(p1*r1), nrow = p1, ncol=r1)
E2 = matrix(rnorm(p2*r2), nrow = p2, ncol=r2)
E3 = matrix(rnorm(p3*r3), nrow = p3, ncol=r3)
# Add sparsity structure
E1[(s1+1):p1,] <- 0
E2[(s2+1):p2,] <- 0
E3[(s3+1):p3,] <- 0
sparse_mode = c(TRUE, TRUE, TRUE);
X = as.tensor(array(rnorm(n*p1*p2*p3), dim=c(n,p1,p2,p3)))
A = ttm(ttm(ttm(S, E1, 1), E2, 2), E3, 3)
eps = sig * rnorm(n) # Error
y = regression.product(X, A) + eps # response
snr <- sd(y)/sd(eps)
r1_init = 10; r2_init = 10; r3_init = 10; # an initial conservative estimator of rank
r_select = sparse_select_r(X, y,r1, r2, r3, p1, p2, p3, thres, sparse_mode)
sparse_sketch_result <- sparse_sketch(X, y, sparse_mode, r_select[1], r_select[2], r_select[3], p1, p2, p3)
fnorm(sparse_sketch_result$hatA - A)/fnorm(A) # errorss
sparse_sketch_result$running_time
}
\references{
\insertRef{zhang2020islet}{ISLET}
}
