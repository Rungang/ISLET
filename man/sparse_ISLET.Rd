% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Sparse_ISLET_main_fun.R
\name{sparse_ISLET}
\alias{sparse_ISLET}
\title{Sparse ISLET}
\usage{
sparse_ISLET(X, y, sparse_mode, r1, r2, r3, p1, p2, p3)
}
\arguments{
\item{X}{input tensor, n*p1*p2*p3}

\item{y}{input response y}

\item{sparse_mode}{Indicator of the sparse mode of the coefficient tensor, i.e. c(TRUE, TRUE, TRUE)}

\item{r}{input rank like r1,r2,r3}

\item{p}{input dimension like p1, p2, p3}
}
\value{
Estimate of coefficient tensor A.
}
\description{
This is the main function to do ISLET in the sparse tensor regression case with known rank r, the output is the estimation error and the running time
}
\examples{
set.seed(2018)
library(gglasso)
# EXAMPLE: Sparse tensor regression
n = c(3000); p = c(20); r = c(3); sig = c(5); s = c(12)
p1 = p2 = p3 = p
r1 = r2 = r3 = r
s1 = s2 = s3 = s
# Generate data
S.array = array(rnorm(r1*r2*r3), dim=c(r1,r2,r3)) # Core tensor
S = as.tensor(S.array)
E1 = matrix(rnorm(p1*r1), nrow = p1, ncol=r1)
E2 = matrix(rnorm(p2*r2), nrow = p2, ncol=r2)
E3 = matrix(rnorm(p3*r3), nrow = p3, ncol=r3)
# Add sparsity structure
E1[(s1+1):p1,] <- 0
E2[(s2+1):p2,] <- 0
E3[(s3+1):p3,] <- 0
sparse_mode = c(TRUE, TRUE, TRUE);
X = as.tensor(array(rnorm(n*p1*p2*p3), dim=c(n,p1,p2,p3)))
A = ttm(ttm(ttm(S, E1, 1), E2, 2), E3, 3) # Parameter tensor
eps = sig * rnorm(n) # Error
y = regression.product(X, A) + eps # response
snr <- sd(y)/sd(eps)
sparse_sketch_result <- sparse_sketch(X, y, sparse_mode, r1, r2, r3, p1, p2, p3)
fnorm(sparse_sketch_result$hatA - A)/fnorm(A) # errorss
sparse_sketch_result$running_time
}
